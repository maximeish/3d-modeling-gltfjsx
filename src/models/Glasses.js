/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/glasses.glb");
  return (
    <group
      ref={ref}
      {...props}
      dispose={null}
      onPointerOver={(e) => (e.stopPropagation(), set(e.object.material.name))}
      onPointerOut={(e) => e.intersections.length === 0 && set(null)}
      onPointerMissed={() => (state.current = null)}
      onPointerDown={(e) => (
        e.stopPropagation(), (state.current = e.object.material.name)
      )}
    >
      >
      <mesh
        geometry={nodes.Circle001_1.geometry}
        material={materials.glasses}
      />
      <mesh geometry={nodes.Circle001_2.geometry} material={materials.glass} />
      <mesh
        geometry={nodes.Circle001_3.geometry}
        material={materials["Material.001"]}
      />
    </group>
  );
}

useGLTF.preload("/glasses.glb");
